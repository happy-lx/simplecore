;buildInfoPackage: chisel3, version: 3.3.1, scalaVersion: 2.12.11, sbtVersion: 1.3.10
circuit Dpath : 
  module Regfile : 
    input clock : Clock
    input reset : Reset
    output io : {flip rp1 : UInt<5>, flip rp2 : UInt<5>, rp1_data : UInt<64>, rp2_data : UInt<64>, flip wp : UInt<5>, flip wp_data : UInt<64>, flip wp_en : UInt<1>}
    
    cmem regs : UInt<64>[32] @[regfile.scala 28:19]
    when io.wp_en : @[regfile.scala 31:5]
      infer mport _T = regs[io.wp], clock @[regfile.scala 32:13]
      node _T_1 = eq(io.wp, UInt<1>("h00")) @[regfile.scala 32:34]
      node _T_2 = mux(_T_1, UInt<1>("h00"), io.wp_data) @[regfile.scala 32:27]
      _T <= _T_2 @[regfile.scala 32:21]
      skip @[regfile.scala 31:5]
    node _T_3 = eq(io.rp1, UInt<1>("h00")) @[regfile.scala 35:31]
    infer mport _T_4 = regs[io.rp1], clock @[regfile.scala 35:47]
    node _T_5 = mux(_T_3, UInt<1>("h00"), _T_4) @[regfile.scala 35:23]
    io.rp1_data <= _T_5 @[regfile.scala 35:17]
    node _T_6 = eq(io.rp2, UInt<1>("h00")) @[regfile.scala 36:31]
    infer mport _T_7 = regs[io.rp2], clock @[regfile.scala 36:47]
    node _T_8 = mux(_T_6, UInt<1>("h00"), _T_7) @[regfile.scala 36:23]
    io.rp2_data <= _T_8 @[regfile.scala 36:17]
    
  module alu_module : 
    input clock : Clock
    input reset : Reset
    output io : {flip input1 : UInt<64>, flip input2 : UInt<64>, flip op : UInt<5>, flip res_ext_op : UInt<3>, res : UInt<64>}
    
    wire res_temp : UInt<64> @[alu.scala 27:24]
    wire add_res : UInt<64> @[alu.scala 28:23]
    node _T = add(io.input1, io.input2) @[alu.scala 29:26]
    node _T_1 = tail(_T, 1) @[alu.scala 29:26]
    add_res <= _T_1 @[alu.scala 29:13]
    node sham = bits(io.input2, 5, 0) @[alu.scala 31:25]
    node _T_2 = eq(io.op, UInt<5>("h00")) @[alu.scala 36:16]
    node _T_3 = eq(io.op, UInt<5>("h01")) @[alu.scala 37:16]
    node _T_4 = sub(io.input1, io.input2) @[alu.scala 37:43]
    node _T_5 = tail(_T_4, 1) @[alu.scala 37:43]
    node _T_6 = eq(io.op, UInt<5>("h02")) @[alu.scala 38:16]
    node _T_7 = and(io.input1, io.input2) @[alu.scala 38:43]
    node _T_8 = eq(io.op, UInt<5>("h03")) @[alu.scala 39:16]
    node _T_9 = or(io.input1, io.input2) @[alu.scala 39:42]
    node _T_10 = eq(io.op, UInt<5>("h04")) @[alu.scala 40:16]
    node _T_11 = xor(io.input1, io.input2) @[alu.scala 40:43]
    node _T_12 = eq(io.op, UInt<5>("h05")) @[alu.scala 41:16]
    node _T_13 = dshl(io.input1, sham) @[alu.scala 41:44]
    node _T_14 = bits(_T_13, 63, 0) @[alu.scala 41:52]
    node _T_15 = eq(io.op, UInt<5>("h06")) @[alu.scala 42:16]
    node _T_16 = asSInt(io.input1) @[alu.scala 42:49]
    node _T_17 = asSInt(io.input2) @[alu.scala 42:70]
    node _T_18 = lt(_T_16, _T_17) @[alu.scala 42:52]
    node _T_19 = eq(io.op, UInt<5>("h07")) @[alu.scala 43:16]
    node _T_20 = lt(io.input1, io.input2) @[alu.scala 43:53]
    node _T_21 = eq(io.op, UInt<5>("h08")) @[alu.scala 44:16]
    node _T_22 = asSInt(io.input1) @[alu.scala 44:50]
    node _T_23 = dshr(_T_22, sham) @[alu.scala 44:53]
    node _T_24 = asUInt(_T_23) @[alu.scala 44:68]
    node _T_25 = eq(io.op, UInt<5>("h09")) @[alu.scala 45:16]
    node _T_26 = bits(io.input1, 31, 0) @[alu.scala 45:44]
    node _T_27 = asSInt(_T_26) @[alu.scala 45:57]
    node _T_28 = dshr(_T_27, sham) @[alu.scala 45:60]
    node _T_29 = asUInt(_T_28) @[alu.scala 45:75]
    node _T_30 = eq(io.op, UInt<5>("h0a")) @[alu.scala 46:16]
    node _T_31 = dshr(io.input1, sham) @[alu.scala 46:53]
    node _T_32 = eq(io.op, UInt<5>("h0b")) @[alu.scala 47:16]
    node _T_33 = bits(io.input1, 31, 0) @[alu.scala 47:44]
    node _T_34 = dshr(_T_33, sham) @[alu.scala 47:60]
    node _T_35 = eq(io.op, UInt<5>("h0c")) @[alu.scala 48:16]
    node _T_36 = eq(io.op, UInt<5>("h0d")) @[alu.scala 49:16]
    node _T_37 = asSInt(io.input1) @[alu.scala 49:50]
    node _T_38 = asSInt(io.input2) @[alu.scala 49:71]
    node _T_39 = mul(_T_37, _T_38) @[alu.scala 49:53]
    node _T_40 = bits(_T_39, 63, 0) @[alu.scala 49:74]
    node _T_41 = eq(io.op, UInt<5>("h0e")) @[alu.scala 50:16]
    node _T_42 = asSInt(io.input1) @[alu.scala 50:51]
    node _T_43 = asSInt(io.input2) @[alu.scala 50:72]
    node _T_44 = mul(_T_42, _T_43) @[alu.scala 50:54]
    node _T_45 = bits(_T_44, 127, 64) @[alu.scala 50:75]
    node _T_46 = eq(io.op, UInt<5>("h0f")) @[alu.scala 51:16]
    node _T_47 = asSInt(io.input1) @[alu.scala 51:53]
    node _T_48 = cat(UInt<1>("h00"), io.input2) @[Cat.scala 29:58]
    node _T_49 = asSInt(_T_48) @[alu.scala 51:88]
    node _T_50 = mul(_T_47, _T_49) @[alu.scala 51:56]
    node _T_51 = bits(_T_50, 127, 64) @[alu.scala 51:91]
    node _T_52 = eq(io.op, UInt<5>("h010")) @[alu.scala 52:16]
    node _T_53 = mul(io.input1, io.input2) @[alu.scala 52:55]
    node _T_54 = bits(_T_53, 127, 64) @[alu.scala 52:76]
    node _T_55 = eq(io.op, UInt<5>("h011")) @[alu.scala 53:16]
    node _T_56 = asSInt(io.input1) @[alu.scala 53:50]
    node _T_57 = asSInt(io.input2) @[alu.scala 53:71]
    node _T_58 = rem(_T_56, _T_57) @[alu.scala 53:53]
    node _T_59 = asUInt(_T_58) @[alu.scala 53:81]
    node _T_60 = eq(io.op, UInt<5>("h012")) @[alu.scala 54:16]
    node _T_61 = rem(io.input1, io.input2) @[alu.scala 54:54]
    node _T_62 = eq(io.op, UInt<5>("h013")) @[alu.scala 55:16]
    node _T_63 = bits(io.input1, 31, 0) @[alu.scala 55:45]
    node _T_64 = bits(io.input2, 31, 0) @[alu.scala 55:72]
    node _T_65 = rem(_T_63, _T_64) @[alu.scala 55:61]
    node _T_66 = eq(io.op, UInt<5>("h014")) @[alu.scala 56:16]
    node _T_67 = bits(io.input1, 31, 0) @[alu.scala 56:44]
    node _T_68 = asSInt(_T_67) @[alu.scala 56:57]
    node _T_69 = bits(io.input2, 31, 0) @[alu.scala 56:71]
    node _T_70 = asSInt(_T_69) @[alu.scala 56:84]
    node _T_71 = rem(_T_68, _T_70) @[alu.scala 56:60]
    node _T_72 = asUInt(_T_71) @[alu.scala 56:94]
    node _T_73 = eq(io.op, UInt<5>("h015")) @[alu.scala 57:16]
    node _T_74 = asSInt(io.input1) @[alu.scala 57:50]
    node _T_75 = asSInt(io.input2) @[alu.scala 57:71]
    node _T_76 = div(_T_74, _T_75) @[alu.scala 57:53]
    node _T_77 = asUInt(_T_76) @[alu.scala 57:81]
    node _T_78 = eq(io.op, UInt<5>("h016")) @[alu.scala 58:16]
    node _T_79 = div(io.input1, io.input2) @[alu.scala 58:54]
    node _T_80 = eq(io.op, UInt<5>("h017")) @[alu.scala 59:16]
    node _T_81 = bits(io.input1, 31, 0) @[alu.scala 59:45]
    node _T_82 = bits(io.input2, 31, 0) @[alu.scala 59:72]
    node _T_83 = div(_T_81, _T_82) @[alu.scala 59:61]
    node _T_84 = eq(io.op, UInt<5>("h018")) @[alu.scala 60:16]
    node _T_85 = bits(io.input1, 31, 0) @[alu.scala 60:44]
    node _T_86 = asSInt(_T_85) @[alu.scala 60:57]
    node _T_87 = bits(io.input2, 31, 0) @[alu.scala 60:71]
    node _T_88 = asSInt(_T_87) @[alu.scala 60:84]
    node _T_89 = div(_T_86, _T_88) @[alu.scala 60:60]
    node _T_90 = asUInt(_T_89) @[alu.scala 60:94]
    node _T_91 = mux(_T_84, _T_90, add_res) @[Mux.scala 98:16]
    node _T_92 = mux(_T_80, _T_83, _T_91) @[Mux.scala 98:16]
    node _T_93 = mux(_T_78, _T_79, _T_92) @[Mux.scala 98:16]
    node _T_94 = mux(_T_73, _T_77, _T_93) @[Mux.scala 98:16]
    node _T_95 = mux(_T_66, _T_72, _T_94) @[Mux.scala 98:16]
    node _T_96 = mux(_T_62, _T_65, _T_95) @[Mux.scala 98:16]
    node _T_97 = mux(_T_60, _T_61, _T_96) @[Mux.scala 98:16]
    node _T_98 = mux(_T_55, _T_59, _T_97) @[Mux.scala 98:16]
    node _T_99 = mux(_T_52, _T_54, _T_98) @[Mux.scala 98:16]
    node _T_100 = mux(_T_46, _T_51, _T_99) @[Mux.scala 98:16]
    node _T_101 = mux(_T_41, _T_45, _T_100) @[Mux.scala 98:16]
    node _T_102 = mux(_T_36, _T_40, _T_101) @[Mux.scala 98:16]
    node _T_103 = mux(_T_35, io.input1, _T_102) @[Mux.scala 98:16]
    node _T_104 = mux(_T_32, _T_34, _T_103) @[Mux.scala 98:16]
    node _T_105 = mux(_T_30, _T_31, _T_104) @[Mux.scala 98:16]
    node _T_106 = mux(_T_25, _T_29, _T_105) @[Mux.scala 98:16]
    node _T_107 = mux(_T_21, _T_24, _T_106) @[Mux.scala 98:16]
    node _T_108 = mux(_T_19, _T_20, _T_107) @[Mux.scala 98:16]
    node _T_109 = mux(_T_15, _T_18, _T_108) @[Mux.scala 98:16]
    node _T_110 = mux(_T_12, _T_14, _T_109) @[Mux.scala 98:16]
    node _T_111 = mux(_T_10, _T_11, _T_110) @[Mux.scala 98:16]
    node _T_112 = mux(_T_8, _T_9, _T_111) @[Mux.scala 98:16]
    node _T_113 = mux(_T_6, _T_7, _T_112) @[Mux.scala 98:16]
    node _T_114 = mux(_T_3, _T_5, _T_113) @[Mux.scala 98:16]
    node _T_115 = mux(_T_2, add_res, _T_114) @[Mux.scala 98:16]
    res_temp <= _T_115 @[alu.scala 35:14]
    node _T_116 = eq(io.res_ext_op, UInt<3>("h00")) @[alu.scala 65:24]
    node _T_117 = eq(io.res_ext_op, UInt<3>("h01")) @[alu.scala 66:24]
    node _T_118 = bits(res_temp, 7, 7) @[alu.scala 66:63]
    node _T_119 = bits(_T_118, 0, 0) @[Bitwise.scala 72:15]
    node _T_120 = mux(_T_119, UInt<56>("h0ffffffffffffff"), UInt<56>("h00")) @[Bitwise.scala 72:12]
    node _T_121 = bits(res_temp, 7, 0) @[alu.scala 66:76]
    node _T_122 = cat(_T_120, _T_121) @[Cat.scala 29:58]
    node _T_123 = eq(io.res_ext_op, UInt<3>("h02")) @[alu.scala 67:24]
    node _T_124 = mux(UInt<1>("h00"), UInt<56>("h0ffffffffffffff"), UInt<56>("h00")) @[Bitwise.scala 72:12]
    node _T_125 = bits(res_temp, 7, 0) @[alu.scala 67:73]
    node _T_126 = cat(_T_124, _T_125) @[Cat.scala 29:58]
    node _T_127 = eq(io.res_ext_op, UInt<3>("h03")) @[alu.scala 68:24]
    node _T_128 = bits(res_temp, 15, 15) @[alu.scala 68:64]
    node _T_129 = bits(_T_128, 0, 0) @[Bitwise.scala 72:15]
    node _T_130 = mux(_T_129, UInt<48>("h0ffffffffffff"), UInt<48>("h00")) @[Bitwise.scala 72:12]
    node _T_131 = bits(res_temp, 15, 0) @[alu.scala 68:78]
    node _T_132 = cat(_T_130, _T_131) @[Cat.scala 29:58]
    node _T_133 = eq(io.res_ext_op, UInt<3>("h04")) @[alu.scala 69:24]
    node _T_134 = mux(UInt<1>("h00"), UInt<48>("h0ffffffffffff"), UInt<48>("h00")) @[Bitwise.scala 72:12]
    node _T_135 = bits(res_temp, 15, 0) @[alu.scala 69:74]
    node _T_136 = cat(_T_134, _T_135) @[Cat.scala 29:58]
    node _T_137 = eq(io.res_ext_op, UInt<3>("h05")) @[alu.scala 70:24]
    node _T_138 = bits(res_temp, 31, 31) @[alu.scala 70:63]
    node _T_139 = bits(_T_138, 0, 0) @[Bitwise.scala 72:15]
    node _T_140 = mux(_T_139, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _T_141 = bits(res_temp, 31, 0) @[alu.scala 70:77]
    node _T_142 = cat(_T_140, _T_141) @[Cat.scala 29:58]
    node _T_143 = eq(io.res_ext_op, UInt<3>("h06")) @[alu.scala 71:24]
    node _T_144 = mux(UInt<1>("h00"), UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _T_145 = bits(res_temp, 31, 0) @[alu.scala 71:73]
    node _T_146 = cat(_T_144, _T_145) @[Cat.scala 29:58]
    node _T_147 = mux(_T_143, _T_146, res_temp) @[Mux.scala 98:16]
    node _T_148 = mux(_T_137, _T_142, _T_147) @[Mux.scala 98:16]
    node _T_149 = mux(_T_133, _T_136, _T_148) @[Mux.scala 98:16]
    node _T_150 = mux(_T_127, _T_132, _T_149) @[Mux.scala 98:16]
    node _T_151 = mux(_T_123, _T_126, _T_150) @[Mux.scala 98:16]
    node _T_152 = mux(_T_117, _T_122, _T_151) @[Mux.scala 98:16]
    node _T_153 = mux(_T_116, res_temp, _T_152) @[Mux.scala 98:16]
    io.res <= _T_153 @[alu.scala 64:12]
    
  module CSRfile : 
    input clock : Clock
    input reset : Reset
    output io : {flip instruction : UInt<32>, flip csr_op : UInt<3>, flip data_in : UInt<64>, flip hasException : UInt<1>, flip hasStall : UInt<1>, flip in_pc : UInt<64>, redir_target : UInt<64>, csr_info : UInt<64>, isredir : UInt<1>}
    
    io.isredir is invalid @[csr.scala 66:8]
    io.csr_info is invalid @[csr.scala 66:8]
    io.redir_target is invalid @[csr.scala 66:8]
    io.in_pc is invalid @[csr.scala 66:8]
    io.hasStall is invalid @[csr.scala 66:8]
    io.hasException is invalid @[csr.scala 66:8]
    io.data_in is invalid @[csr.scala 66:8]
    io.csr_op is invalid @[csr.scala 66:8]
    io.instruction is invalid @[csr.scala 66:8]
    node _T = eq(io.csr_op, UInt<3>("h02")) @[csr.scala 69:35]
    node _T_1 = eq(io.csr_op, UInt<3>("h04")) @[csr.scala 69:58]
    node _T_2 = or(_T, _T_1) @[csr.scala 69:45]
    node _T_3 = eq(io.csr_op, UInt<3>("h03")) @[csr.scala 69:81]
    node _T_4 = or(_T_2, _T_3) @[csr.scala 69:68]
    node _T_5 = eq(io.hasException, UInt<1>("h00")) @[csr.scala 69:95]
    node _T_6 = and(_T_4, _T_5) @[csr.scala 69:92]
    node _T_7 = eq(io.hasStall, UInt<1>("h00")) @[csr.scala 69:115]
    node _T_8 = and(_T_6, _T_7) @[csr.scala 69:112]
    wire wen : UInt<1>
    wen <= _T_8
    reg mtvec : UInt<64>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 71:24]
    reg mepc : UInt<64>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 72:23]
    reg mcause : UInt<64>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 73:25]
    wire _T_9 : {zero : UInt<1>, ssi : UInt<1>, msi : UInt<1>, sti : UInt<1>, mti : UInt<1>, sei : UInt<1>, mei : UInt<1>} @[csr.scala 74:35]
    _T_9.mei <= UInt<1>("h00") @[csr.scala 74:35]
    _T_9.sei <= UInt<1>("h00") @[csr.scala 74:35]
    _T_9.mti <= UInt<1>("h00") @[csr.scala 74:35]
    _T_9.sti <= UInt<1>("h00") @[csr.scala 74:35]
    _T_9.msi <= UInt<1>("h00") @[csr.scala 74:35]
    _T_9.ssi <= UInt<1>("h00") @[csr.scala 74:35]
    _T_9.zero <= UInt<1>("h00") @[csr.scala 74:35]
    reg mie : {zero : UInt<1>, ssi : UInt<1>, msi : UInt<1>, sti : UInt<1>, mti : UInt<1>, sei : UInt<1>, mei : UInt<1>}, clock with : (reset => (reset, _T_9)) @[csr.scala 74:22]
    wire _T_10 : {zero : UInt<1>, ssi : UInt<1>, msi : UInt<1>, sti : UInt<1>, mti : UInt<1>, sei : UInt<1>, mei : UInt<1>} @[csr.scala 75:35]
    _T_10.mei <= UInt<1>("h00") @[csr.scala 75:35]
    _T_10.sei <= UInt<1>("h00") @[csr.scala 75:35]
    _T_10.mti <= UInt<1>("h00") @[csr.scala 75:35]
    _T_10.sti <= UInt<1>("h00") @[csr.scala 75:35]
    _T_10.msi <= UInt<1>("h00") @[csr.scala 75:35]
    _T_10.ssi <= UInt<1>("h00") @[csr.scala 75:35]
    _T_10.zero <= UInt<1>("h00") @[csr.scala 75:35]
    reg mip : {zero : UInt<1>, ssi : UInt<1>, msi : UInt<1>, sti : UInt<1>, mti : UInt<1>, sei : UInt<1>, mei : UInt<1>}, clock with : (reset => (reset, _T_10)) @[csr.scala 75:22]
    reg mtval : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[csr.scala 76:24]
    reg mscratch : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[csr.scala 77:27]
    wire _T_11 : {sd : UInt<1>, zero1 : UInt<40>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, zero2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, zero3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, zero4 : UInt<1>, sie : UInt<1>, uie : UInt<1>} @[csr.scala 78:39]
    _T_11.uie <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.sie <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.zero4 <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.mie <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.upie <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.spie <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.zero3 <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.mpie <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.spp <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.zero2 <= UInt<2>("h00") @[csr.scala 78:39]
    _T_11.mpp <= UInt<2>("h00") @[csr.scala 78:39]
    _T_11.fs <= UInt<2>("h00") @[csr.scala 78:39]
    _T_11.xs <= UInt<2>("h00") @[csr.scala 78:39]
    _T_11.mprv <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.sum <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.mxr <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.tvm <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.tw <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.tsr <= UInt<1>("h00") @[csr.scala 78:39]
    _T_11.zero1 <= UInt<40>("h00") @[csr.scala 78:39]
    _T_11.sd <= UInt<1>("h00") @[csr.scala 78:39]
    reg mstatus : {sd : UInt<1>, zero1 : UInt<40>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, zero2 : UInt<2>, spp : UInt<1>, mpie : UInt<1>, zero3 : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, zero4 : UInt<1>, sie : UInt<1>, uie : UInt<1>}, clock with : (reset => (reset, _T_11)) @[csr.scala 78:26]
    reg mtimecmp : UInt<64>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 79:27]
    reg mtime : UInt<64>, clock with : (reset => (reset, UInt<1>("h00"))) @[csr.scala 80:24]
    wire prv_now : UInt<2>
    prv_now <= UInt<2>("h03")
    
  module Dpath : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip c2d : {cp_pc_sel : UInt<3>, cp_op1_sel : UInt<2>, cp_op2_sel : UInt<2>, cp_alu_sel : UInt<5>, cp_reg_wen : UInt<1>, cp_mem_en : UInt<1>, cp_mem_read_op : UInt<3>, cp_mem_write_mask : UInt<8>, cp_mem_wen : UInt<1>, cp_alu_ext_sel : UInt<3>, cp_wb_sel : UInt<2>, cp_csr_op : UInt<3>, hasexception : UInt<1>, shouldstall : UInt<1>}, d2c : {instr : UInt<32>, islt : UInt<1>, isltu : UInt<1>, iseq : UInt<1>, isredir : UInt<1>}, flip imem : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, mask : UInt<8>, op : UInt<3>, wdata : UInt<64>, memen : UInt<1>, wen : UInt<1>}}, resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {rdata : UInt<64>}}}, flip dmem : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, mask : UInt<8>, op : UInt<3>, wdata : UInt<64>, memen : UInt<1>, wen : UInt<1>}}, resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {rdata : UInt<64>}}}}
    
    io.dmem.resp.bits.rdata is invalid @[dpath.scala 30:8]
    io.dmem.resp.valid is invalid @[dpath.scala 30:8]
    io.dmem.resp.ready is invalid @[dpath.scala 30:8]
    io.dmem.req.bits.wen is invalid @[dpath.scala 30:8]
    io.dmem.req.bits.memen is invalid @[dpath.scala 30:8]
    io.dmem.req.bits.wdata is invalid @[dpath.scala 30:8]
    io.dmem.req.bits.op is invalid @[dpath.scala 30:8]
    io.dmem.req.bits.mask is invalid @[dpath.scala 30:8]
    io.dmem.req.bits.addr is invalid @[dpath.scala 30:8]
    io.dmem.req.valid is invalid @[dpath.scala 30:8]
    io.dmem.req.ready is invalid @[dpath.scala 30:8]
    io.imem.resp.bits.rdata is invalid @[dpath.scala 30:8]
    io.imem.resp.valid is invalid @[dpath.scala 30:8]
    io.imem.resp.ready is invalid @[dpath.scala 30:8]
    io.imem.req.bits.wen is invalid @[dpath.scala 30:8]
    io.imem.req.bits.memen is invalid @[dpath.scala 30:8]
    io.imem.req.bits.wdata is invalid @[dpath.scala 30:8]
    io.imem.req.bits.op is invalid @[dpath.scala 30:8]
    io.imem.req.bits.mask is invalid @[dpath.scala 30:8]
    io.imem.req.bits.addr is invalid @[dpath.scala 30:8]
    io.imem.req.valid is invalid @[dpath.scala 30:8]
    io.imem.req.ready is invalid @[dpath.scala 30:8]
    io.d2c.isredir is invalid @[dpath.scala 30:8]
    io.d2c.iseq is invalid @[dpath.scala 30:8]
    io.d2c.isltu is invalid @[dpath.scala 30:8]
    io.d2c.islt is invalid @[dpath.scala 30:8]
    io.d2c.instr is invalid @[dpath.scala 30:8]
    io.c2d.shouldstall is invalid @[dpath.scala 30:8]
    io.c2d.hasexception is invalid @[dpath.scala 30:8]
    io.c2d.cp_csr_op is invalid @[dpath.scala 30:8]
    io.c2d.cp_wb_sel is invalid @[dpath.scala 30:8]
    io.c2d.cp_alu_ext_sel is invalid @[dpath.scala 30:8]
    io.c2d.cp_mem_wen is invalid @[dpath.scala 30:8]
    io.c2d.cp_mem_write_mask is invalid @[dpath.scala 30:8]
    io.c2d.cp_mem_read_op is invalid @[dpath.scala 30:8]
    io.c2d.cp_mem_en is invalid @[dpath.scala 30:8]
    io.c2d.cp_reg_wen is invalid @[dpath.scala 30:8]
    io.c2d.cp_alu_sel is invalid @[dpath.scala 30:8]
    io.c2d.cp_op2_sel is invalid @[dpath.scala 30:8]
    io.c2d.cp_op1_sel is invalid @[dpath.scala 30:8]
    io.c2d.cp_pc_sel is invalid @[dpath.scala 30:8]
    reg reg_pc : UInt<64>, clock with : (reset => (reset, UInt<64>("h080000000"))) @[dpath.scala 32:25]
    wire wire_pc_next : UInt<64> @[dpath.scala 33:28]
    io.imem.req.valid <= UInt<1>("h01") @[dpath.scala 36:23]
    node _T = bits(reg_pc, 31, 0) @[dpath.scala 37:36]
    io.imem.req.bits.addr <= _T @[dpath.scala 37:27]
    io.imem.req.bits.op <= UInt<3>("h05") @[dpath.scala 38:25]
    io.imem.req.bits.memen <= UInt<1>("h01") @[dpath.scala 39:28]
    io.imem.req.bits.wen <= UInt<1>("h00") @[dpath.scala 40:26]
    node _T_1 = bits(io.imem.resp.bits.rdata, 31, 0) @[dpath.scala 42:52]
    wire dp_instr : UInt
    dp_instr <= _T_1
    io.d2c.instr <= dp_instr @[dpath.scala 44:18]
    wire temp_pc_next_4 : UInt<64> @[dpath.scala 47:30]
    wire temp_pc_jump_target : UInt<64> @[dpath.scala 48:35]
    wire temp_pc_jr_target : UInt<64> @[dpath.scala 49:33]
    wire temp_pc_branch_target : UInt<64> @[dpath.scala 50:37]
    wire temp_pc_redirect_target : UInt<64> @[dpath.scala 51:39]
    node _T_2 = eq(io.c2d.cp_pc_sel, UInt<3>("h00")) @[dpath.scala 55:27]
    node _T_3 = eq(io.c2d.cp_pc_sel, UInt<3>("h04")) @[dpath.scala 56:27]
    node _T_4 = eq(io.c2d.cp_pc_sel, UInt<3>("h01")) @[dpath.scala 57:27]
    node _T_5 = eq(io.c2d.cp_pc_sel, UInt<3>("h03")) @[dpath.scala 58:27]
    node _T_6 = eq(io.c2d.cp_pc_sel, UInt<3>("h02")) @[dpath.scala 59:27]
    node _T_7 = mux(_T_6, temp_pc_branch_target, temp_pc_next_4) @[Mux.scala 98:16]
    node _T_8 = mux(_T_5, temp_pc_jr_target, _T_7) @[Mux.scala 98:16]
    node _T_9 = mux(_T_4, temp_pc_jump_target, _T_8) @[Mux.scala 98:16]
    node _T_10 = mux(_T_3, temp_pc_redirect_target, _T_9) @[Mux.scala 98:16]
    node _T_11 = mux(_T_2, temp_pc_next_4, _T_10) @[Mux.scala 98:16]
    wire_pc_next <= _T_11 @[dpath.scala 54:18]
    node _T_12 = eq(io.c2d.shouldstall, UInt<1>("h00")) @[dpath.scala 62:10]
    when _T_12 : @[dpath.scala 63:5]
      reg_pc <= wire_pc_next @[dpath.scala 64:16]
      skip @[dpath.scala 63:5]
    node dp_rs1_addr = bits(dp_instr, 19, 15) @[dpath.scala 68:31]
    node dp_rs2_addr = bits(dp_instr, 24, 20) @[dpath.scala 69:31]
    node dp_rd_addr = bits(dp_instr, 11, 7) @[dpath.scala 70:31]
    inst regfile of Regfile @[dpath.scala 72:25]
    regfile.clock <= clock
    regfile.reset <= reset
    regfile.io.rp1 <= dp_rs1_addr @[dpath.scala 74:20]
    regfile.io.rp2 <= dp_rs2_addr @[dpath.scala 75:20]
    node dp_iim = bits(dp_instr, 31, 20) @[dpath.scala 80:26]
    node _T_13 = bits(dp_instr, 31, 31) @[dpath.scala 81:30]
    node _T_14 = bits(dp_instr, 19, 12) @[dpath.scala 81:43]
    node _T_15 = bits(dp_instr, 20, 20) @[dpath.scala 81:59]
    node _T_16 = bits(dp_instr, 30, 21) @[dpath.scala 81:72]
    node _T_17 = cat(_T_15, _T_16) @[Cat.scala 29:58]
    node _T_18 = cat(_T_13, _T_14) @[Cat.scala 29:58]
    node dp_jim = cat(_T_18, _T_17) @[Cat.scala 29:58]
    node dp_uim = bits(dp_instr, 31, 12) @[dpath.scala 82:26]
    node _T_19 = bits(dp_instr, 31, 25) @[dpath.scala 83:30]
    node _T_20 = bits(dp_instr, 11, 7) @[dpath.scala 83:46]
    node dp_sim = cat(_T_19, _T_20) @[Cat.scala 29:58]
    node _T_21 = bits(dp_instr, 31, 31) @[dpath.scala 84:30]
    node _T_22 = bits(dp_instr, 7, 7) @[dpath.scala 84:43]
    node _T_23 = bits(dp_instr, 30, 25) @[dpath.scala 84:55]
    node _T_24 = bits(dp_instr, 11, 8) @[dpath.scala 84:71]
    node _T_25 = cat(_T_23, _T_24) @[Cat.scala 29:58]
    node _T_26 = cat(_T_21, _T_22) @[Cat.scala 29:58]
    node dp_bim = cat(_T_26, _T_25) @[Cat.scala 29:58]
    node dp_zim = bits(dp_instr, 19, 15) @[dpath.scala 85:26]
    node _T_27 = bits(dp_iim, 11, 11) @[dpath.scala 87:40]
    node _T_28 = bits(_T_27, 0, 0) @[Bitwise.scala 72:15]
    node _T_29 = mux(_T_28, UInt<54>("h03fffffffffffff"), UInt<54>("h00")) @[Bitwise.scala 72:12]
    node dp_iim_ext = cat(_T_29, dp_iim) @[Cat.scala 29:58]
    node _T_30 = bits(dp_jim, 19, 19) @[dpath.scala 88:40]
    node _T_31 = bits(_T_30, 0, 0) @[Bitwise.scala 72:15]
    node _T_32 = mux(_T_31, UInt<43>("h07ffffffffff"), UInt<43>("h00")) @[Bitwise.scala 72:12]
    node _T_33 = cat(_T_32, dp_jim) @[Cat.scala 29:58]
    node dp_jim_ext = cat(_T_33, UInt<1>("h00")) @[Cat.scala 29:58]
    node _T_34 = bits(dp_uim, 19, 19) @[dpath.scala 89:40]
    node _T_35 = bits(_T_34, 0, 0) @[Bitwise.scala 72:15]
    node _T_36 = mux(_T_35, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _T_37 = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
    node _T_38 = cat(_T_36, dp_uim) @[Cat.scala 29:58]
    node dp_uim_ext = cat(_T_38, _T_37) @[Cat.scala 29:58]
    node _T_39 = bits(dp_sim, 11, 11) @[dpath.scala 90:40]
    node _T_40 = bits(_T_39, 0, 0) @[Bitwise.scala 72:15]
    node _T_41 = mux(_T_40, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
    node dp_sim_ext = cat(_T_41, dp_sim) @[Cat.scala 29:58]
    node _T_42 = bits(dp_bim, 11, 11) @[dpath.scala 91:40]
    node _T_43 = bits(_T_42, 0, 0) @[Bitwise.scala 72:15]
    node _T_44 = mux(_T_43, UInt<51>("h07ffffffffffff"), UInt<51>("h00")) @[Bitwise.scala 72:12]
    node _T_45 = cat(_T_44, dp_bim) @[Cat.scala 29:58]
    node dp_bim_ext = cat(_T_45, UInt<1>("h00")) @[Cat.scala 29:58]
    node _T_46 = mux(UInt<1>("h00"), UInt<59>("h07ffffffffffffff"), UInt<59>("h00")) @[Bitwise.scala 72:12]
    node dp_zim_ext = cat(_T_46, dp_zim) @[Cat.scala 29:58]
    node _T_47 = add(reg_pc, UInt<3>("h04")) @[dpath.scala 96:30]
    node _T_48 = tail(_T_47, 1) @[dpath.scala 96:30]
    temp_pc_next_4 <= _T_48 @[dpath.scala 96:20]
    node _T_49 = asSInt(reg_pc) @[dpath.scala 97:42]
    node _T_50 = asSInt(dp_jim_ext) @[dpath.scala 97:64]
    node _T_51 = add(_T_49, _T_50) @[dpath.scala 97:45]
    node _T_52 = tail(_T_51, 1) @[dpath.scala 97:45]
    node _T_53 = asSInt(_T_52) @[dpath.scala 97:45]
    node _T_54 = asUInt(_T_53) @[dpath.scala 97:74]
    temp_pc_jump_target <= _T_54 @[dpath.scala 97:25]
    node _T_55 = asSInt(reg_pc) @[dpath.scala 98:42]
    node _T_56 = asSInt(dp_iim_ext) @[dpath.scala 98:64]
    node _T_57 = add(_T_55, _T_56) @[dpath.scala 98:45]
    node _T_58 = tail(_T_57, 1) @[dpath.scala 98:45]
    node _T_59 = asSInt(_T_58) @[dpath.scala 98:45]
    node _T_60 = shr(_T_59, 1) @[dpath.scala 98:68]
    node _T_61 = shl(_T_60, 1) @[dpath.scala 98:74]
    node _T_62 = asUInt(_T_61) @[dpath.scala 98:86]
    temp_pc_jr_target <= _T_62 @[dpath.scala 98:23]
    node _T_63 = asSInt(reg_pc) @[dpath.scala 99:44]
    node _T_64 = asSInt(dp_bim_ext) @[dpath.scala 99:66]
    node _T_65 = add(_T_63, _T_64) @[dpath.scala 99:47]
    node _T_66 = tail(_T_65, 1) @[dpath.scala 99:47]
    node _T_67 = asSInt(_T_66) @[dpath.scala 99:47]
    node _T_68 = asUInt(_T_67) @[dpath.scala 99:76]
    temp_pc_branch_target <= _T_68 @[dpath.scala 99:27]
    wire dp_op1_src : UInt<64> @[dpath.scala 102:26]
    wire dp_op2_src : UInt<64> @[dpath.scala 103:26]
    node _T_69 = eq(io.c2d.cp_op1_sel, UInt<2>("h00")) @[dpath.scala 106:28]
    node _T_70 = eq(io.c2d.cp_op1_sel, UInt<2>("h01")) @[dpath.scala 107:28]
    node _T_71 = eq(io.c2d.cp_op1_sel, UInt<2>("h02")) @[dpath.scala 108:28]
    node _T_72 = mux(_T_71, dp_uim_ext, regfile.io.rp1_data) @[Mux.scala 98:16]
    node _T_73 = mux(_T_70, dp_zim_ext, _T_72) @[Mux.scala 98:16]
    node _T_74 = mux(_T_69, regfile.io.rp1_data, _T_73) @[Mux.scala 98:16]
    dp_op1_src <= _T_74 @[dpath.scala 105:16]
    node _T_75 = eq(io.c2d.cp_op2_sel, UInt<2>("h00")) @[dpath.scala 112:28]
    node _T_76 = eq(io.c2d.cp_op2_sel, UInt<2>("h01")) @[dpath.scala 113:28]
    node _T_77 = eq(io.c2d.cp_op2_sel, UInt<2>("h02")) @[dpath.scala 114:28]
    node _T_78 = eq(io.c2d.cp_op2_sel, UInt<2>("h03")) @[dpath.scala 115:28]
    node _T_79 = mux(_T_78, dp_sim_ext, regfile.io.rp2_data) @[Mux.scala 98:16]
    node _T_80 = mux(_T_77, dp_iim_ext, _T_79) @[Mux.scala 98:16]
    node _T_81 = mux(_T_76, reg_pc, _T_80) @[Mux.scala 98:16]
    node _T_82 = mux(_T_75, regfile.io.rp2_data, _T_81) @[Mux.scala 98:16]
    dp_op2_src <= _T_82 @[dpath.scala 111:16]
    inst dp_alu of alu_module @[dpath.scala 118:24]
    dp_alu.clock <= clock
    dp_alu.reset <= reset
    dp_alu.io.input1 <= dp_op1_src @[dpath.scala 120:22]
    dp_alu.io.input2 <= dp_op2_src @[dpath.scala 121:22]
    dp_alu.io.op <= io.c2d.cp_alu_sel @[dpath.scala 123:18]
    dp_alu.io.res_ext_op <= io.c2d.cp_alu_ext_sel @[dpath.scala 124:26]
    node _T_83 = asSInt(dp_op1_src) @[dpath.scala 129:38]
    node _T_84 = asSInt(dp_op2_src) @[dpath.scala 129:60]
    node _T_85 = lt(_T_83, _T_84) @[dpath.scala 129:41]
    io.d2c.islt <= _T_85 @[dpath.scala 129:17]
    node _T_86 = lt(dp_op1_src, dp_op2_src) @[dpath.scala 130:33]
    io.d2c.isltu <= _T_86 @[dpath.scala 130:18]
    node _T_87 = eq(dp_op1_src, dp_op2_src) @[dpath.scala 131:32]
    io.d2c.iseq <= _T_87 @[dpath.scala 131:17]
    io.dmem.req.valid <= io.c2d.cp_mem_en @[dpath.scala 134:23]
    node _T_88 = bits(dp_alu.io.res, 31, 0) @[dpath.scala 135:40]
    io.dmem.req.bits.addr <= _T_88 @[dpath.scala 135:27]
    io.dmem.req.bits.mask <= io.c2d.cp_mem_write_mask @[dpath.scala 136:27]
    io.dmem.req.bits.op <= io.c2d.cp_mem_read_op @[dpath.scala 137:25]
    io.dmem.req.bits.wdata <= regfile.io.rp2_data @[dpath.scala 138:28]
    io.dmem.req.bits.memen <= io.c2d.cp_mem_en @[dpath.scala 139:28]
    io.dmem.req.bits.wen <= io.c2d.cp_mem_wen @[dpath.scala 140:26]
    inst csr of CSRfile @[dpath.scala 144:21]
    csr.clock <= clock
    csr.reset <= reset
    csr.io.instruction <= dp_instr @[dpath.scala 146:24]
    csr.io.csr_op <= io.c2d.cp_csr_op @[dpath.scala 147:19]
    csr.io.data_in <= dp_alu.io.res @[dpath.scala 148:20]
    csr.io.hasException <= io.c2d.hasexception @[dpath.scala 149:25]
    csr.io.hasStall <= io.c2d.shouldstall @[dpath.scala 150:21]
    csr.io.in_pc <= reg_pc @[dpath.scala 151:18]
    temp_pc_redirect_target <= csr.io.redir_target @[dpath.scala 153:29]
    io.d2c.isredir <= csr.io.isredir @[dpath.scala 155:20]
    wire dp_wb_data : UInt<64> @[dpath.scala 158:26]
    node _T_89 = eq(io.c2d.cp_wb_sel, UInt<2>("h00")) @[dpath.scala 161:27]
    node _T_90 = eq(io.c2d.cp_wb_sel, UInt<2>("h01")) @[dpath.scala 162:27]
    node _T_91 = eq(io.c2d.cp_wb_sel, UInt<2>("h02")) @[dpath.scala 163:27]
    node _T_92 = eq(io.c2d.cp_wb_sel, UInt<2>("h03")) @[dpath.scala 164:27]
    node _T_93 = mux(_T_92, csr.io.csr_info, dp_alu.io.res) @[Mux.scala 98:16]
    node _T_94 = mux(_T_91, temp_pc_next_4, _T_93) @[Mux.scala 98:16]
    node _T_95 = mux(_T_90, io.dmem.resp.bits.rdata, _T_94) @[Mux.scala 98:16]
    node _T_96 = mux(_T_89, dp_alu.io.res, _T_95) @[Mux.scala 98:16]
    dp_wb_data <= _T_96 @[dpath.scala 160:16]
    node _T_97 = eq(io.c2d.hasexception, UInt<1>("h00")) @[dpath.scala 167:10]
    node _T_98 = eq(io.c2d.shouldstall, UInt<1>("h00")) @[dpath.scala 167:34]
    node _T_99 = and(_T_97, _T_98) @[dpath.scala 167:31]
    node _T_100 = and(_T_99, io.c2d.cp_reg_wen) @[dpath.scala 167:54]
    when _T_100 : @[dpath.scala 168:5]
      regfile.io.wp_en <= UInt<1>("h01") @[dpath.scala 169:26]
      skip @[dpath.scala 168:5]
    else : @[dpath.scala 171:5]
      regfile.io.wp_en <= UInt<1>("h00") @[dpath.scala 172:26]
      skip @[dpath.scala 171:5]
    regfile.io.wp <= dp_rd_addr @[dpath.scala 174:19]
    regfile.io.wp_data <= dp_wb_data @[dpath.scala 175:24]
    
